{"version":3,"sources":["../../../../page/hsb/select/index.js"],"names":["ctx","sortOpt","arr","Page","data","productName","item","base","func","select","onLoad","params","productId","name","setData","productInfo","then","console","log","res","itemList","outlook","type","forEach","index","parseInt","conftype","push","radioChange","event","value","detail","key","currentTarget","dataset","id","onSelectChanged","setClick","dataSet","funcHandler"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAIA,YAAJ;AACA,IAAMC,UAAU,SAAVA,OAAU,GAAc;AAAA,MAAbC,GAAa,uEAAP,EAAO;AAE7B,CAFD;;AAIAC,KAAK;AACHC,QAAM;AACJC,iBAAa,EADT;AAEJC,UAAM,EAFF;AAGJC,UAAM,EAHF;AAIJC,UAAM,EAJF;AAKJC,YAAQ;AALJ,GADH;AAQHC,QARG,kBAQIC,MARJ,EAQY;AACbX,UAAM,IAAN;AACAW,aAAS;AACPC,iBAAW,KADJ;AAEPC,YAAM;AAFC,KAAT;AAIAb,QAAIc,OAAJ,CAAY;AACVT,mBAAa;AADH,KAAZ;AAGA,sBAAQU,WAAR,CAAoB;AAClBH,iBAAWD,OAAOC;AADA,KAApB,EAEGI,IAFH,CAEQ,eAAO;AACbC,cAAQC,GAAR,CAAYC,GAAZ;AACA,UAAIb,OAAOa,IAAIC,QAAf;AACA,UAAIb,OAAO,EAAX;AAAA,UAAec,UAAU,EAAzB;AAAA,UAA6Bb,OAAO,EAApC;AAAA,UAAwCc,aAAxC;AACAhB,WAAKiB,OAAL,CAAa,UAACjB,IAAD,EAAOkB,KAAP,EAAiB;AAC5BF,eAAOG,SAASnB,KAAKoB,QAAd,CAAP;AACA,YAAIJ,SAAS,CAAb,EAAgB;AACdf,eAAKoB,IAAL,CAAUrB,IAAV;AACD,SAFD,MAEO,IAAIgB,SAAS,CAAb,EAAgB;AACrBD,kBAAQM,IAAR,CAAarB,IAAb;AACD,SAFM,MAEA,IAAIgB,SAAS,CAAb,EAAgB;AACrBd,eAAKmB,IAAL,CAAUrB,IAAV;AACD;AACF,OATD;AAUAW,cAAQC,GAAR,CAAYZ,IAAZ;AACAN,UAAIc,OAAJ,CAAY;AACVP,kBADU,EACJc,gBADI,EACKb;AADL,OAAZ;AAGD,KApBD;AAqBD,GAtCE;AAuCHoB,aAvCG,uBAuCSC,KAvCT,EAuCgB;AACjB,QAAIpB,SAAST,IAAII,IAAJ,CAASK,MAAtB;AACA,QAAIL,OAAO;AACT0B,aAAOD,MAAME,MAAN,CAAaD,KADX;AAETE,WAAKH,MAAMI,aAAN,CAAoBC,OAApB,CAA4BC,EAFxB;AAGTX,aAAOK,MAAMI,aAAN,CAAoBC,OAApB,CAA4BV;AAH1B,KAAX;;AAMAf,WAAOL,KAAK4B,GAAZ,IAAmB5B,KAAK0B,KAAxB;AACA9B,QAAIc,OAAJ,CAAY,EAAEL,cAAF,EAAZ;AACAT,QAAIoC,eAAJ;AACD,GAlDE;AAmDHC,UAnDG,oBAmDMR,KAnDN,EAmDa;AACd,QAAIS,UAAUT,MAAMI,aAAN,CAAoBC,OAAlC;AACAjB,YAAQC,GAAR,CAAYoB,OAAZ;AAED,GAvDE;AAwDHC,aAxDG,uBAwDSnC,IAxDT,EAwDe;AAChB;AACD,GA1DE;AA2DHgC,iBA3DG,6BA2De;AAChB;AACD;AA7DE,CAAL","file":"index.js","sourcesContent":["import product from '../../../model/product';\nimport index from \"../../../config/index\";\n\nlet ctx;\nconst sortOpt = (arr = []) => {\n\n};\n\nPage({\n  data: {\n    productName: '',\n    item: [],\n    base: [],\n    func: [],\n    select: {}\n  },\n  onLoad(params) {\n    ctx = this;\n    params = {\n      productId: 38200,\n      name: 'Iphone8'\n    };\n    ctx.setData({\n      productName: 'Iphone8'\n    });\n    product.productInfo({\n      productId: params.productId\n    }).then(res => {\n      console.log(res);\n      let item = res.itemList;\n      let base = [], outlook = [], func = [], type;\n      item.forEach((item, index) => {\n        type = parseInt(item.conftype);\n        if (type === 1) {\n          base.push(item)\n        } else if (type === 2) {\n          outlook.push(item)\n        } else if (type === 3) {\n          func.push(item);\n        }\n      });\n      console.log(item);\n      ctx.setData({\n        base, outlook, func\n      })\n    })\n  },\n  radioChange(event) {\n    let select = ctx.data.select;\n    let data = {\n      value: event.detail.value,\n      key: event.currentTarget.dataset.id,\n      index: event.currentTarget.dataset.index\n    };\n\n    select[data.key] = data.value;\n    ctx.setData({ select });\n    ctx.onSelectChanged();\n  },\n  setClick(event) {\n    let dataSet = event.currentTarget.dataset;\n    console.log(dataSet);\n\n  },\n  funcHandler(data) {\n    // console.log(data);\n  },\n  onSelectChanged() {\n    // console.log(ctx.data.select);\n  }\n});"]}