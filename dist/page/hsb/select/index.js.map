{"version":3,"sources":["../../../../page/hsb/select/index.js"],"names":["ctx","Page","data","base","func","selects","funcMap","product","onLoad","params","productId","productInfo","then","item","res","itemList","outlook","type","setInitValue","forEach","index","parseInt","conftype","push","funcHandler","setData","picUrl","picurl","classId","classid","itemid","maxPrice","maxprice","productName","productname","standardPrice","standardprice","console","log","list","map","kid","id","did","oid","desc","picture","ques","question","q","qindex","show","name","baseTapHandler","event","dataset","currentTarget","pid","cid","onSelectsChanged","initData","funcItem","funcTapHandler","onSubmit","evaluate","Object","values","join"],"mappings":"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","file":"index.js","sourcesContent":["import product from '../../../model/product';\nlet ctx;\nPage({\n  data: {\n    base: [],\n    func: [],\n    selects: {},\n    funcMap: {},\n    product: {}\n  },\n  onLoad(params) {\n    ctx = this;\n    params = { productId: 38200 };\n    product.productInfo({\n      productId: params.productId\n    }).then(res => {\n      let item = res.itemList;\n      let base = [], outlook = [], func = [], type;\n      this.setInitValue(res.itemList);\n      item.forEach((item, index) => {\n        type = parseInt(item.conftype);\n        if (type === 1) {\n          base.push(item)\n        } else if (type === 2) {\n          outlook.push(item)\n        } else if (type === 3) {\n          func.push(item);\n        }\n      });\n      func = ctx.funcHandler(func);\n      ctx.setData({\n        base,\n        outlook,\n        func,\n        product: {\n          picUrl: res.picurl,\n          classId: res.classid,\n          productId: res.itemid,\n          maxPrice: res.maxprice,\n          productName: res.productname,\n          standardPrice: res.standardprice\n        }\n      });\n      console.log(ctx.data.product);\n    })\n  },\n\n  /**\n   * 生成功能选项对应的数据结构\n   * 功能选项本质是一个具有默认值和可选值的单选框\n   * @param {*} data\n   */\n  funcHandler(list) {\n    let func = [];\n    list.map((item) => {\n      let kid = item.id, did, oid, desc, picture;\n      let ques = item.question;\n      ques.map((q, qindex) => {\n        if (q.show == 0) {\n          did = q.id;\n        } else {\n          oid = q.id;\n          desc = q.name;\n          picture = q.picture;\n        }\n      })\n      func.push({ kid, did, oid, desc, picture})\n    });\n    return func\n  },\n\n  /**\n   * 基本选项 外观选项 切换\n   * @param {*} event\n   */\n  baseTapHandler (event) {\n    let selects = ctx.data.selects;\n    let dataset = event.currentTarget.dataset;\n    selects[dataset.pid] = dataset.cid;\n    ctx.setData({ selects });\n    ctx.onSelectsChanged();\n  },\n\n  /**\n   * 设置初始默认值 功能选项有key和value 非功能选项只有key\n   * @param {*} list\n   */\n  setInitValue (list) {\n    let initData = {}, funcItem;\n    list.map((item, index) => {\n      if (item.conftype != 3) {\n        initData[item.id] = \"\"\n      } else {\n        funcItem = item.question;\n        funcItem.map((ques, qindex) => {\n          if (ques['show'] == 0) {\n            initData[item.id] = ques.id;\n          }\n        })\n      }\n    })\n    ctx.setData({ selects: initData});\n    ctx.onSelectsChanged();\n  },\n\n  /**\n   * 功能选项切换\n   * @param {*} event\n   */\n  funcTapHandler (event) {\n    let dataset = event.currentTarget.dataset;\n    let selects = ctx.data.selects;\n    if (selects[dataset.kid] == dataset.did) {\n      selects[dataset.kid] = dataset.oid\n    } else {\n      selects[dataset.kid] = dataset.did;\n    }\n    ctx.setData({ selects });\n    ctx.onSelectsChanged();\n  },\n\n  /**\n   * 监听 selects 做一些猥琐的操作\n   * 改变进度条 限制一些选项等等...\n   */\n  onSelectsChanged () {\n    console.log(ctx.data.selects);\n  },\n\n  /**\n   * 估价\n   */\n  onSubmit () {\n    product.evaluate({\n      productId: ctx.data.product.productId,\n      selects: Object.values(ctx.data.selects).join('-')\n    }).then(res => {\n      console.log(res)\n    }, res => {\n      console.log(res);\n    })\n  }\n});"]}