{"version":3,"sources":["../../model/trade.js"],"names":["sfCity","Promise","resolve","reject","get","url","success","res","data","ret","retinfo","visitTime","support_visit_time","errcode","errmsg","hsbCity"],"mappings":";;;;;;AAAA;;AACA;;;;;;kBACe;AACbA,QADa,oBACH;AACR,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,sBAAMC,GAAN,CAAU;AACRC,aAAK,WAAIL,MADD;AAERM,eAFQ,mBAECC,GAFD,EAEM;AACZA,gBAAMA,IAAIC,IAAV;AACA,cAAID,IAAIE,GAAJ,IAAW,CAAf,EAAkB;AAChBP,oBAAQK,IAAIC,IAAZ;AACD,WAFD,MAEO;AACLL,mBAAOI,IAAIG,OAAX;AACD;AACF;AATO,OAAV;AAWD,KAZM,CAAP;AAaD,GAfY;AAgBbC,WAhBa,uBAgBA;AACX,WAAO,IAAIV,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,sBAAMC,GAAN,CAAU;AACRC,aAAK,WAAIO,kBADD;AAERN,eAFQ,mBAECC,GAFD,EAEM;AACZA,gBAAMA,IAAIC,IAAV;AACA,cAAID,IAAIM,OAAJ,IAAe,CAAnB,EAAsB;AACpBX,oBAAQK,IAAIC,IAAZ;AACD,WAFD,MAEO;AACLL,mBAAOI,IAAIO,MAAX;AACD;AACF;AATO,OAAV;AAWD,KAZM,CAAP;AAaD,GA9BY;AA+BbC,SA/Ba,qBA+BF;AACT,WAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,sBAAMC,GAAN,CAAU;AACRC,aAAK,WAAIU,OADD;AAERT,eAFQ,mBAECC,GAFD,EAEM;AACZA,gBAAMA,IAAIC,IAAV;AACA,cAAID,IAAIM,OAAJ,IAAe,CAAnB,EAAsB;AACpBX,oBAAQK,IAAIC,IAAZ;AACD,WAFD,MAEO;AACLL,mBAAOI,IAAIO,MAAX;AACD;AACF;AATO,OAAV;AAWD,KAZM,CAAP;AAaD;AA7CY,C","file":"trade.js","sourcesContent":["import { url } from '../config/index';\nimport Utils from '../util/utils';\nexport default {\n  sfCity () {\n    return new Promise((resolve, reject) => {\n      Utils.get({\n        url: url.sfCity,\n        success (res) {\n          res = res.data;\n          if (res.ret == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.retinfo)\n          }\n        }\n      })\n    })\n  },\n  visitTime () {\n    return new Promise((resolve, reject) => {\n      Utils.get({\n        url: url.support_visit_time,\n        success (res) {\n          res = res.data;\n          if (res.errcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.errmsg);\n          }\n        }\n      })\n    })\n  },\n  hsbCity () {\n    return new Promise((resolve, reject) => {\n      Utils.get({\n        url: url.hsbCity,\n        success (res) {\n          res = res.data;\n          if (res.errcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.errmsg);\n          }\n        }\n      })\n    })\n  }\n}\n"]}