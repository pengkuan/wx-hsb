{"version":3,"sources":["../../model/order.js"],"names":["orders","params","Promise","resolve","reject","post","url","data","uid","userkey","pageSize","pageIndex","success","res","retcode","retinfo","cancelOrder","orderid","olduid","order","order_id","take","takeOrder","tel","openid","type","regionid","regionId","sendMsgFlag","csrfToken","Date","selects","itemid","ordertype","visitTime","address","couponId","wechatpayouttype","errcode","errmsg","takeSfOrder","nickname","province","city","county","addr","sendtime"],"mappings":"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","file":"order.js","sourcesContent":["import Utils from '../util/utils';\nimport {url, WX_APP_ID, WX_AUTH_TYPE} from '../config/index';\nexport default {\n  // 查询订单列表\n  orders (params) {\n    return new Promise((resolve, reject) => {\n      Utils.post({\n        url: url.orders,\n        data: {\n          uid: params.uid,\n          userkey: params.userkey,\n          pageSize: params.pageSize || 6,\n          pageIndex: params.pageIndex || 1\n        },\n        success (res) {\n          res = res.data;\n          if (res.retcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.retinfo);\n          }\n        }\n      })\n    })\n  },\n  // 取消订单\n  cancelOrder ({orderid, uid, userkey, olduid}) {\n    return new Promise((resolve, reject) => {\n      Utils.post({\n        url: url.cancelOrder,\n        data: {\n          orderid,\n          uid,\n          userkey,\n          olduid\n        },\n        success (res) {\n          res = res.data;\n          if (res.retcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.retinfo);\n          }\n        }\n      })\n    })\n  },\n  // 订单详情\n  order ({orderid, uid, userkey}) {\n    return new Promise((resolve, reject) => {\n      Utils.post({\n        url: url.order,\n        data: {\n          uid,\n          userkey,\n          order_id: orderid\n        },\n        success (res) {\n          res = res.data;\n          if (res.retcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.retinfo);\n          }\n        }\n      })\n    })\n  },\n\n  /**\n   * 关于用户信息 没有登录时可以为空字符串\n   * 但是 openid绝对不能为空\n   * @param params\n   * @return {Promise}\n   */\n  take (params) {\n    return new Promise((resolve, reject) => {\n      Utils.post({\n        url: url.takeOrder,\n        data: {\n          uid: params.uid || \"\",\n          userkey: params.userkey || \"\",\n          tel: params.tel,\n          openid: params.openid,\n          type: 9,\n          regionid: params.regionId || \"\",\n          sendMsgFlag: 0,\n          csrfToken: new Date(),\n          selects: params.selects,\n          itemid: params.itemid,\n          olduid: params.olduid || \"\",\n          ordertype: params.ordertype || 'post',\n          visitTime: params.visitTime,\n          address: params.address,\n          couponId: params.couponId || \"\",\n          wechatpayouttype: \"9\", // 区分小程序\n        },\n        success (res) {\n          res = res.data;\n          if (res.errcode == 0) {\n            resolve(res.data)\n          } else {\n            reject(res.errmsg);\n          }\n        }\n      })\n    })\n  },\n  takeSfOrder ({orderid, nickname, tel, province, city, county, addr, sendtime}) {\n    return new Promise((resolve, reject) => {\n      Utils.post({\n        url: url.takeSfOrder,\n        data: {\n          tel,\n          orderid,\n          nickname,\n          province,\n          city,\n          county,\n          addr,\n          sendtime\n        },\n        success (res) {\n          res = res.data;\n          if (res.errcode == 0) {\n            resolve(res.data)\n          } else {\n            // reject(res.errmsg);\n          }\n        }\n      })\n    })\n  }\n}"]}